{
  "version": 3,
  "sources": ["../src/utils.ts", "../src/addAddress.ts", "../src/index.ts", "../src/iife.ts"],
  "sourcesContent": ["/**\n * Copyright 2023 Jason Go\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport const domReady = (callback: Function, wait: number = 120000, objects: string[] = [], selectors: string[] = []): void => {\n  const ctrl = setTimeout(() => {\n    checkReady = () => {}\n  }, wait)\n\n  let checkReady = (): void => {\n    if (\n      document.readyState.length > 7 &&\n      objects.every((key) => Object.hasOwn(window, key)) &&\n      selectors.every((selector) => document.querySelector(selector))\n    ) {\n      clearInterval(ctrl)\n      callback()\n    } else {\n      setTimeout(checkReady, 9)\n    }\n  }\n\n  checkReady()\n}\n\nexport const $ = <T extends keyof HTMLElementTagNameMap | string>(\n  s: T\n): T extends keyof HTMLElementTagNameMap ? HTMLElementTagNameMap[T] | null : HTMLElement | null => {\n  return document.querySelector(s) as T extends keyof HTMLElementTagNameMap ? HTMLElementTagNameMap[T] : HTMLElement | null\n}\n\nexport interface CustomWindow extends Window {\n  App: any\n}\n", "/**\n * Copyright 2023 Jason Go\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { $ } from './utils'\n\nexport const addressStr = '#checkout_offer_extra_contact_information_address'\n\nexport const addAddress = (billingDetails: Record<string, any>): Record<string, any> => {\n  billingDetails.address = {\n    postal_code: ($(addressStr + '_zip') as HTMLInputElement).value,\n    city: ($(addressStr + '_city') as HTMLInputElement).value,\n    country: ($('#input-address-country') as HTMLInputElement).value,\n    line1: ($(addressStr + '_line_1') as HTMLInputElement).value,\n    line2:\n      ($(addressStr + '_line_2') as HTMLInputElement).value === ''\n        ? ($(addressStr + '_line_1') as HTMLInputElement).value\n        : ($(addressStr + '_line_2') as HTMLInputElement).value,\n    state: ($(addressStr + '_state') as HTMLSelectElement)?.options[($(addressStr + '_state') as HTMLSelectElement)?.selectedIndex].text\n  }\n  return billingDetails\n}\n", "/**\n * Copyright 2023 Jason Go\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/* eslint-disable @typescript-eslint/no-implied-eval */\n/* eslint-disable no-new-func */\n\nimport { domReady, CustomWindow } from './utils'\nimport { addAddress, addressStr } from './addAddress'\n\ndeclare const window: CustomWindow\n\nconst patch = (): void => {\n  const originalConstructor = window.App.StripeElementsForm\n\n  let serializedConstructor: string = originalConstructor.toString()\n  serializedConstructor = serializedConstructor.replace(/billing_details\\s*:\\s*(.+?)\\s*}/g, 'billing_details: App.StripeElementsForm.addAddress($1) }')\n\n  const newConstructor = new Function('f', 's', 'o', `(${serializedConstructor})(f,s,o)`)\n  // @ts-expect-error\n  newConstructor.addAddress = addAddress\n  // @ts-expect-error\n  newConstructor.bindTo = originalConstructor.bindTo\n  newConstructor.prototype = originalConstructor.prototype\n  window.App.StripeElementsForm = newConstructor\n\n  // @ts-expect-error\n  document.querySelectorAll('[data-stripe-elements-form]').forEach((el) => newConstructor.bindTo(el))\n}\n\nexport const stripeAddBillingAddress = (): void => {\n  const config = Object.assign(\n    {\n      enabledOffers: '',\n      disabledOffers: ''\n    },\n    document.currentScript?.dataset\n  )\n\n  const offerSlug = window.location.href.match(/\\/offers\\/(.{8})/)?.[1] ?? ''\n\n  if (\n    // Not a checkout page\n    offerSlug === '' ||\n    // Or included in disabled offers\n    config.disabledOffers.split(/\\s*[,|]\\s*/).includes(offerSlug) ||\n    // Or not included in enabled offers\n    (config.enabledOffers !== '' && !config.enabledOffers.split(/\\s*[,|]\\s*/).includes(offerSlug))\n  ) {\n    return\n  }\n\n  domReady(\n    // Run the patched code\n    patch,\n    // But limit waiting for 10 seconds...\n    10000,\n    // For these objects to exist before running the patched code\n    ['$', 'App', 'Stripe'],\n    // And run only when address fields are present\n    [addressStr + '_zip']\n  )\n}\n", "/**\n * Copyright 2023 Jason Go\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { stripeAddBillingAddress } from '.'\nstripeAddBillingAddress()\n"],
  "mappings": ";mBAkBO,IAAMA,EAAW,CAACC,EAAoBC,EAAe,KAAQC,EAAoB,CAAC,EAAGC,EAAsB,CAAC,IAAY,CAC7H,IAAMC,EAAO,WAAW,IAAM,CAC5BC,EAAa,IAAM,CAAC,CACtB,EAAGJ,CAAI,EAEHI,EAAa,IAAY,CAEzB,SAAS,WAAW,OAAS,GAC7BH,EAAQ,MAAOI,GAAQ,OAAO,OAAO,OAAQA,CAAG,CAAC,GACjDH,EAAU,MAAOI,GAAa,SAAS,cAAcA,CAAQ,CAAC,GAE9D,cAAcH,CAAI,EAClBJ,EAAS,GAET,WAAWK,EAAY,CAAC,CAE5B,EAEAA,EAAW,CACb,EAEaG,EACXC,GAEO,SAAS,cAAcA,CAAC,ECtB1B,IAAMC,EAAa,oDAEbC,EAAcC,GAA6D,CAtBxF,IAAAC,EAAAC,EAuBE,OAAAF,EAAe,QAAU,CACvB,YAAcG,EAAEL,EAAa,MAAM,EAAuB,MAC1D,KAAOK,EAAEL,EAAa,OAAO,EAAuB,MACpD,QAAUK,EAAE,wBAAwB,EAAuB,MAC3D,MAAQA,EAAEL,EAAa,SAAS,EAAuB,MACvD,MACGK,EAAEL,EAAa,SAAS,EAAuB,QAAU,GACrDK,EAAEL,EAAa,SAAS,EAAuB,MAC/CK,EAAEL,EAAa,SAAS,EAAuB,MACtD,OAAQI,EAAAC,EAAEL,EAAa,QAAQ,IAAvB,YAAAI,EAAgD,SAASD,EAAAE,EAAEL,EAAa,QAAQ,IAAvB,YAAAG,EAAgD,eAAe,IAClI,EACOD,CACT,ECTA,IAAMI,EAAQ,IAAY,CACxB,IAAMC,EAAsB,OAAO,IAAI,mBAEnCC,EAAgCD,EAAoB,SAAS,EACjEC,EAAwBA,EAAsB,QAAQ,mCAAoC,0DAA0D,EAEpJ,IAAMC,EAAiB,IAAI,SAAS,IAAK,IAAK,IAAK,IAAID,CAAqB,UAAU,EAEtFC,EAAe,WAAaC,EAE5BD,EAAe,OAASF,EAAoB,OAC5CE,EAAe,UAAYF,EAAoB,UAC/C,OAAO,IAAI,mBAAqBE,EAGhC,SAAS,iBAAiB,6BAA6B,EAAE,QAASE,GAAOF,EAAe,OAAOE,CAAE,CAAC,CACpG,EAEaC,EAA0B,IAAY,CA5CnD,IAAAC,EAAAC,EAAAC,EA6CE,IAAMC,EAAS,OAAO,OACpB,CACE,cAAe,GACf,eAAgB,EAClB,GACAH,EAAA,SAAS,gBAAT,YAAAA,EAAwB,OAC1B,EAEMI,GAAYF,GAAAD,EAAA,OAAO,SAAS,KAAK,MAAM,kBAAkB,IAA7C,YAAAA,EAAiD,KAAjD,KAAAC,EAAuD,GAIvEE,IAAc,IAEdD,EAAO,eAAe,MAAM,YAAY,EAAE,SAASC,CAAS,GAE3DD,EAAO,gBAAkB,IAAM,CAACA,EAAO,cAAc,MAAM,YAAY,EAAE,SAASC,CAAS,GAK9FC,EAEEZ,EAEA,IAEA,CAAC,IAAK,MAAO,QAAQ,EAErB,CAACa,EAAa,MAAM,CACtB,CACF,ECzDAC,EAAwB",
  "names": ["domReady", "callback", "wait", "objects", "selectors", "ctrl", "checkReady", "key", "selector", "$", "s", "addressStr", "addAddress", "billingDetails", "_a", "_b", "$", "patch", "originalConstructor", "serializedConstructor", "newConstructor", "addAddress", "el", "stripeAddBillingAddress", "_a", "_b", "_c", "config", "offerSlug", "domReady", "addressStr", "stripeAddBillingAddress"]
}
